{"version":3,"sources":["firebase.js","App.jsx","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","App","React","useState","tareas","setTareas","tarea","setTarea","modoEdicion","setModoEdicion","id","setId","useEffect","obtenerDatos","a","db","firestore","collection","get","datos","arrayData","docs","map","doc","data","console","log","ejecutarBtn","e","preventDefault","trim","nuevaTarea","nombre","fecha","Date","now","add","eliminar","delete","arrayFiltrado","filter","item","editar","update","arrayEditado","className","onClick","activarEdicion","onSubmit","type","placeholder","onChange","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53f5daed.chunk.js","sourcesContent":["import firebase from 'firebase/compat/app'\r\nimport 'firebase/compat/firestore'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDlbpWOhslS6mMwGa9nH8Lyy8n3zurP9aY\",\r\n  authDomain: \"crudc-binnarium.firebaseapp.com\",\r\n  projectId: \"crudc-binnarium\",\r\n  storageBucket: \"crudc-binnarium.appspot.com\",\r\n  messagingSenderId: \"1047657417633\",\r\n  appId: \"1:1047657417633:web:abf9de8f17b9abf94919e0\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport {firebase}\r\n//const auth = getAuth()\r\n//const database = getFirestore();\r\n//export {app, auth, database}\r\n\r\n","import React from 'react';\nimport {firebase} from './firebase'\n\nfunction App() {\n\n  const [tareas, setTareas] = React.useState([])\n  const [tarea, setTarea] = React.useState('')\n  const [modoEdicion, setModoEdicion] = React.useState(false)\n  const [id, setId] = React.useState('')\n\n  React.useEffect (() => {\n    //funcion para obtenr datos\n    const obtenerDatos = async () => {\n\n      try {\n\n        const db = firebase.firestore()\n        const datos = await db.collection('tareas').get()\n        //\n        const arrayData = datos.docs.map(doc => ({ id: doc.id, ...doc.data()}))\n\n        console.log(arrayData)\n\n        setTareas(arrayData)\n\n      } catch (error) {\n        console.log(error)\n      }\n\n    }\n    obtenerDatos()\n\n  }, [])\n\n  const ejecutarBtn = async (e) => {\n    e.preventDefault()\n\n    if(!tarea.trim()) {\n      console.log(\"Esta vacio\")\n      return\n    }\n    //Agregar documentos\n    try {\n\n      const db = firebase.firestore()\n      const nuevaTarea = {\n        nombre: tarea,\n        fecha: Date.now()\n      }\n\n      const data = await db.collection(\"tareas\").add(nuevaTarea)\n      setTareas([\n        ...tareas,\n        {...nuevaTarea, id: data.id}//resivimos el id de firestore\n      ])\n\n    } catch (error) {\n      console.log(error)\n    }\n\n    console.log(tarea)\n  }\n\n  //Eliminar\n  const eliminar = async (id) => {\n    try {\n      const db = firebase.firestore()\n      await db.collection('tareas').doc(id).delete()\n\n      const arrayFiltrado = tareas.filter(item => item.id !== id)\n      setTareas(arrayFiltrado)\n\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  //Edicion\n  const activarEdicion = (item) => {\n    setModoEdicion(true)\n    setTarea(item.nombre)\n    setId(item.id)\n  }\n  //Edicion de datos\n  const editar = async (e) => {\n    e.preventDefault()\n    if (!tarea.trim) {\n      console.log('vacio')\n      return\n    }\n\n    try {\n      \n      const db = firebase.firestore()\n      await db.collection('tareas').doc(id).update({\n        nombre: tarea\n      })\n      const arrayEditado = tareas.map(item => (\n        item.id === id ? {id: item.id, fecha: item.fecha, nombre: tarea} : item\n      ))\n      setTareas(arrayEditado)\n      setModoEdicion(false)\n      setTarea('')\n      setId('')\n\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  return (\n    <div className=\"container mt-3\">\n      <div className = \"row\">\n        <div className = \"col-md-6\">\n          <ul className=\"list-group\">\n            {\n              tareas.map(item => (\n                <li className=\"list-group-item\" key={item.id}>\n                  {item.nombre}\n                  <button \n                    className=\"btn btn-danger btn-sm float-right\"\n                    onClick={() => eliminar(item.id)}\n                  >\n                    ELIMINAR\n                  </button>\n                  <button \n                    className=\"btn btn-warning btn-sm float-right mr-2\"\n                    onClick={() => activarEdicion(item)}\n                  >\n                    EDITAR\n                  </button>\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n        <div className = \"col-md-6\">\n         <h3>\n           {\n             modoEdicion ? 'Editar Tarea' : 'Agregar Tarea'\n             \n           }\n         </h3>\n         <form onSubmit={modoEdicion ? editar : ejecutarBtn}>\n          <input \n            type=\"text\" \n            placeholder=\"Ingresar Tarea\"\n            className=\"form-control mb-2\"\n            onChange={e => setTarea(e.target.value)}\n            value={tarea}\n          /> \n\n          <button\n            className={\n              modoEdicion ? 'btn btn-warning btn-block' : 'btn btn-dark btn-block' \n            }\n            type=\"submit\"\n          >\n            {\n              modoEdicion ? 'EDITAR' : 'EJECUTAR'\n            }\n          </button>\n\n         </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}